"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReactionEvent = void 0;
var events_1 = require("events");
var Reaction = /** @class */ (function (_super) {
    __extends(Reaction, _super);
    function Reaction(type, emoji, isHidden, cooldown) {
        var _this = _super.call(this) || this;
        _this.lastEvent = null;
        _this.cooldown = cooldown || Infinity;
        _this.context = null;
        _this.isHidden = isHidden !== undefined ? isHidden : false;
        _this.state = 'UNMOUNTED';
        _this.type = type;
        _this.emoji = emoji;
        return _this;
    }
    Reaction.prototype.isVisibile = function () {
        return !this.isHidden;
    };
    Reaction.prototype.setVisibile = function (visibile) {
        this.isHidden = visibile !== undefined ? !visibile : !this.isHidden;
        this.update();
        return true;
    };
    Reaction.prototype.setCooldown = function (cooldown) {
        this.cooldown = cooldown;
        return true;
    };
    Reaction.prototype.isMount = function () {
        return this.state === 'MOUNTED';
    };
    // Events dispatch
    Reaction.prototype.onAdd = function (event) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    Reaction.prototype.onRemove = function (event) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    Reaction.prototype._onAdd = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            var lastEvent, cooldown;
            return __generator(this, function (_a) {
                lastEvent = this.lastEvent;
                cooldown = this.cooldown;
                this.lastEvent = (new Date);
                if (lastEvent) {
                    if ((new Date).getTime() >= (lastEvent.getTime() + cooldown)) {
                        this.onAdd(event);
                    }
                }
                else {
                    this.onAdd(event);
                }
                return [2 /*return*/];
            });
        });
    };
    Reaction.prototype._onRemove = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            var lastEvent, cooldown;
            return __generator(this, function (_a) {
                lastEvent = this.lastEvent;
                cooldown = this.cooldown;
                if (lastEvent) {
                    if ((new Date).getTime() >= (lastEvent.getTime() + cooldown)) {
                        this.onRemove(event);
                        this.lastEvent = (new Date);
                    }
                }
                else {
                    this.onRemove(event);
                }
                return [2 /*return*/];
            });
        });
    };
    Reaction.prototype.render = function (reactionContext, currentUserId, users) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    // Internal function
    Reaction.prototype.getContext = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, ((_a = this.context) === null || _a === void 0 ? void 0 : _a.fetch())];
                    case 1: return [2 /*return*/, (_b.sent()) || null];
                }
            });
        });
    };
    Reaction.prototype.getReactionContext = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, message;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.context) return [3 /*break*/, 5];
                        _i = 0;
                        return [4 /*yield*/, this.context.reactions.cache.array()];
                    case 1:
                        _a = (_b.sent());
                        _b.label = 2;
                    case 2:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        message = _a[_i];
                        if (message.emoji.toString() === this.emoji.toString()) {
                            return [2 /*return*/, message];
                        }
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 2];
                    case 4: return [2 /*return*/, null];
                    case 5: return [2 /*return*/, null];
                }
            });
        });
    };
    Reaction.prototype.mount = function (context) {
        return __awaiter(this, void 0, void 0, function () {
            var isHidden, reactionContext, currentUserId, users;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        isHidden = this.isHidden;
                        if (!context) return [3 /*break*/, 12];
                        if (!isHidden) return [3 /*break*/, 3];
                        if (!this.isMount()) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.unmount()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/, false];
                    case 3: return [4 /*yield*/, this.getReactionContext()];
                    case 4:
                        reactionContext = _a.sent();
                        currentUserId = context.author.id;
                        if (!reactionContext) return [3 /*break*/, 9];
                        return [4 /*yield*/, reactionContext.users.fetch()];
                    case 5:
                        users = (_a.sent()).array();
                        return [4 /*yield*/, this.render(reactionContext, currentUserId, users)];
                    case 6:
                        _a.sent();
                        if (!(users.findIndex(function (i) { return i.id === currentUserId; }) >= 0)) return [3 /*break*/, 8];
                        return [4 /*yield*/, context.react(this.emoji)];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8: return [3 /*break*/, 11];
                    case 9: return [4 /*yield*/, context.react(this.emoji)];
                    case 10:
                        _a.sent();
                        _a.label = 11;
                    case 11:
                        this.context = context;
                        this.state = 'MOUNTED';
                        this.emit('mounted');
                        return [2 /*return*/, true];
                    case 12: return [2 /*return*/, false];
                }
            });
        });
    };
    Reaction.prototype.unmount = function () {
        return __awaiter(this, void 0, void 0, function () {
            var messageReaction, _i, messageReaction_1, message;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.context) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.context.reactions.cache.array()];
                    case 1:
                        messageReaction = _a.sent();
                        _i = 0, messageReaction_1 = messageReaction;
                        _a.label = 2;
                    case 2:
                        if (!(_i < messageReaction_1.length)) return [3 /*break*/, 5];
                        message = messageReaction_1[_i];
                        if (!(message.emoji.toString() === this.emoji.toString())) return [3 /*break*/, 4];
                        return [4 /*yield*/, message.remove()];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        _i++;
                        return [3 /*break*/, 2];
                    case 5:
                        this.context = null;
                        this.state = 'MOUNTED';
                        this.emit('unmounted');
                        return [2 /*return*/, true];
                    case 6: return [2 /*return*/, false];
                }
            });
        });
    };
    Reaction.prototype.update = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.emit('update');
                return [2 /*return*/];
            });
        });
    };
    return Reaction;
}(events_1.EventEmitter));
exports.default = Reaction;
var ReactionEvent = /** @class */ (function () {
    function ReactionEvent(type, user, reaction) {
        this.type = type;
        this.user = user;
        this.reaction = reaction;
        this.message = reaction.message;
    }
    return ReactionEvent;
}());
exports.ReactionEvent = ReactionEvent;
//# sourceMappingURL=reaction.js.map