"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.format = void 0;
var events_1 = require("events");
var deep_equal_1 = __importDefault(require("deep-equal"));
var uuid_1 = require("uuid");
var button_1 = __importDefault(require("./reactions/button"));
var Component = /** @class */ (function (_super) {
    __extends(Component, _super);
    function Component(type, options, states, isHidden, name) {
        var _this = _super.call(this) || this;
        _this.reactionEnabled = true;
        _this.context = null;
        _this.state = 'UNMOUNTED';
        _this.type = type;
        _this.options = options;
        _this.states = states;
        _this.isHidden = isHidden !== undefined ? isHidden : false;
        _this.reactions = [];
        _this._prevRender = null;
        _this.isDeleted = false;
        _this.name = name || null;
        _this.id = uuid_1.v4();
        if (_this.defaultOptions)
            Object.assign(_this.options, _this.defaultOptions);
        if (_this.defaultStates)
            Object.assign(_this.states, _this.defaultStates);
        return _this;
    }
    Component.prototype.isVisibile = function () {
        return !this.isHidden;
    };
    Component.prototype.isMount = function () {
        return this.state === 'MOUNTED';
    };
    Component.prototype.setVisibile = function (visibile) {
        this.isHidden = visibile !== undefined ? !visibile : !this.isHidden;
        this.update();
        return true;
    };
    Component.prototype.setOption = function (name, value) {
        this.options[name] = value;
        this.update();
        return true;
    };
    Component.prototype.setState = function (name, value) {
        if (typeof name === 'string' && value) {
            this.states[name] = value;
            this.update();
            return true;
        }
        else if (typeof name === 'object') {
            Object.assign(this.states, name);
            this.update();
            return true;
        }
        return false;
    };
    Component.prototype.getState = function (name) {
        return this.states[name];
    };
    Component.prototype.addReaction = function (reaction) {
        var _this = this;
        if (!this.reactionEnabled)
            throw new Error('reactions are disabled in this component');
        reaction.on('update', function () { return _this.update(); });
        this.reactions.push(reaction);
        this.update();
        return reaction;
    };
    Component.prototype.addButton = function (emoji, isHidden) {
        if (!this.reactionEnabled)
            throw new Error('buttons are disabled in this component');
        var reaction = new button_1.default(emoji, isHidden);
        this.addReaction(reaction);
        return reaction;
    };
    Component.prototype.delete = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.unmount()];
                    case 1:
                        _a.sent();
                        this.emit('delete');
                        this.isDeleted = true;
                        return [2 /*return*/, true];
                }
            });
        });
    };
    // Internal function
    Component.prototype.getReactionContext = function (emoji) {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, reaction;
            return __generator(this, function (_b) {
                if (!this.reactionEnabled)
                    return [2 /*return*/, null];
                for (_i = 0, _a = this.reactions; _i < _a.length; _i++) {
                    reaction = _a[_i];
                    if (reaction.emoji.toString() === emoji.toString()) {
                        return [2 /*return*/, reaction];
                    }
                }
                return [2 /*return*/, null];
            });
        });
    };
    Component.prototype.getContext = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, ((_a = this.context) === null || _a === void 0 ? void 0 : _a.fetch())];
                    case 1: return [2 /*return*/, (_b.sent()) || null];
                }
            });
        });
    };
    Component.prototype.render = function () {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    Component.prototype.mountReaction = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, reaction;
            return __generator(this, function (_b) {
                if (this.context && this.reactionEnabled) {
                    for (_i = 0, _a = this.reactions; _i < _a.length; _i++) {
                        reaction = _a[_i];
                        reaction.mount(this.context);
                    }
                    this.emit('reactionMounted');
                    return [2 /*return*/, true];
                }
                else {
                    return [2 /*return*/, false];
                }
                return [2 /*return*/];
            });
        });
    };
    Component.prototype.mount = function (channel) {
        return __awaiter(this, void 0, void 0, function () {
            var isHidden, type, renderResult, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        isHidden = this.isHidden;
                        type = this.type;
                        if (!isHidden) return [3 /*break*/, 3];
                        if (!this.isMount()) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.unmount()];
                    case 1:
                        _c.sent();
                        _c.label = 2;
                    case 2: return [2 /*return*/, false];
                    case 3: return [4 /*yield*/, this.render()];
                    case 4:
                        renderResult = _c.sent();
                        if (!renderResult) return [3 /*break*/, 10];
                        if (!(!this._prevRender || !deep_equal_1.default(renderResult, this._prevRender))) return [3 /*break*/, 8];
                        if (!(this.isMount() && this.context)) return [3 /*break*/, 6];
                        _a = this;
                        return [4 /*yield*/, this.context.edit(renderResult)];
                    case 5:
                        _a.context = _c.sent();
                        return [3 /*break*/, 8];
                    case 6:
                        _b = this;
                        return [4 /*yield*/, channel.send(renderResult)];
                    case 7:
                        _b.context = _c.sent();
                        _c.label = 8;
                    case 8: return [4 /*yield*/, this.mountReaction()];
                    case 9:
                        _c.sent();
                        this._prevRender = renderResult;
                        this.state = 'MOUNTED';
                        this.emit('mounted');
                        return [2 /*return*/, true];
                    case 10:
                        console.error('Failed to render component : invalid result', this.type);
                        return [2 /*return*/, false];
                }
            });
        });
    };
    Component.prototype.unmount = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.context) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.unmountReaction()];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.context.delete()];
                    case 2:
                        _a.sent();
                        this._prevRender = null;
                        this.context = null;
                        this.state = 'UNMOUNTED';
                        this.emit('unmounted');
                        return [2 /*return*/, true];
                    case 3: return [2 /*return*/, false];
                }
            });
        });
    };
    Component.prototype.unmountReaction = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, reaction;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.context) return [3 /*break*/, 5];
                        _i = 0, _a = this.reactions;
                        _b.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        reaction = _a[_i];
                        return [4 /*yield*/, reaction.unmount()];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        this.emit('reactionUnmounted');
                        return [2 /*return*/, true];
                    case 5: return [2 /*return*/, false];
                }
            });
        });
    };
    Component.prototype.update = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.emit('update');
                return [2 /*return*/];
            });
        });
    };
    return Component;
}(events_1.EventEmitter));
exports.default = Component;
function format(content, data) {
    var result = content;
    for (var key in data) {
        result = result.replace("{{" + key + "}}", data[key]);
    }
    return result;
}
exports.format = format;
//# sourceMappingURL=component.js.map