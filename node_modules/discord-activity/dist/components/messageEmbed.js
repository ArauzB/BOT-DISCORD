"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var discord_js_1 = __importDefault(require("discord.js"));
var component_1 = __importStar(require("../component"));
var MessageEmbedComponent = /** @class */ (function (_super) {
    __extends(MessageEmbedComponent, _super);
    function MessageEmbedComponent(props) {
        return _super.call(this, 'messageEmbed', {}, {}, props && props.isHidden !== undefined ? props.isHidden : false, props === null || props === void 0 ? void 0 : props.name) || this;
    }
    MessageEmbedComponent.prototype.addField = function (name, value, inline) {
        var fields = this.options.fields || [];
        var field = {
            name: name,
            value: value
        };
        if (inline !== undefined)
            field.inline = inline;
        fields.push([
            field
        ]);
        return this.setOption('fields', fields);
    };
    MessageEmbedComponent.prototype.addFields = function () {
        var fields_ = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            fields_[_i] = arguments[_i];
        }
        var fields = [];
        for (var _a = 0, fields_1 = fields_; _a < fields_1.length; _a++) {
            var field = fields_1[_a];
            if (field instanceof Array) {
                fields.push(field);
            }
            else {
                fields.push([
                    field
                ]);
            }
        }
        return this.setOption('fields', fields);
    };
    MessageEmbedComponent.prototype.attachFiles = function (file) {
        return this.setOption('files', file);
    };
    MessageEmbedComponent.prototype.setAuthor = function (name, iconURL, url) {
        return this.setOption('author', {
            name: name,
            iconURL: iconURL,
            url: url
        });
    };
    MessageEmbedComponent.prototype.setColor = function (color) {
        return this.setOption('color', color);
    };
    MessageEmbedComponent.prototype.setDescription = function (description) {
        return this.setOption('description', description);
    };
    MessageEmbedComponent.prototype.setFooter = function (text, iconURL) {
        return this.setOption('footer', {
            text: text,
            iconURL: iconURL
        });
    };
    MessageEmbedComponent.prototype.setImage = function (url) {
        return this.setOption('image', url);
    };
    MessageEmbedComponent.prototype.setThumbnail = function (url) {
        return this.setOption('thumbnail', url);
    };
    MessageEmbedComponent.prototype.setTimestamp = function (timestamp) {
        return this.setOption('timestamp', timestamp);
    };
    MessageEmbedComponent.prototype.setTitle = function (title) {
        return this.setOption('title', title);
    };
    MessageEmbedComponent.prototype.setURL = function (url) {
        return this.setOption('url', url);
    };
    MessageEmbedComponent.prototype.render = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, fields, author, color, description, footer, image, thumbnail, timestamp, title, url, embed;
            return __generator(this, function (_b) {
                _a = this.options, fields = _a.fields, author = _a.author, color = _a.color, description = _a.description, footer = _a.footer, image = _a.image, thumbnail = _a.thumbnail, timestamp = _a.timestamp, title = _a.title, url = _a.url;
                embed = new discord_js_1.default.MessageEmbed();
                if (fields)
                    embed.addFields.apply(embed, formatFields(fields, this.states));
                if (author)
                    embed.setAuthor(author.name, author.iconURL, author.url);
                if (color)
                    embed.setColor(color);
                if (description)
                    embed.setDescription(component_1.format(description, this.states));
                if (footer)
                    embed.setFooter(component_1.format(footer.text, this.states), footer.iconURL);
                if (image)
                    embed.setImage(image);
                if (thumbnail)
                    embed.setThumbnail(thumbnail);
                if (timestamp)
                    embed.setTimestamp(typeof timestamp === 'boolean' ? undefined : timestamp);
                if (title)
                    embed.setTitle(component_1.format(title, this.states));
                if (url)
                    embed.setURL(url);
                return [2 /*return*/, embed];
            });
        });
    };
    return MessageEmbedComponent;
}(component_1.default));
function formatFields(fields_, states) {
    var fields = [];
    for (var _i = 0, fields_2 = fields_; _i < fields_2.length; _i++) {
        var field = fields_2[_i];
        var fields__ = [];
        for (var _a = 0, field_1 = field; _a < field_1.length; _a++) {
            var field_ = field_1[_a];
            var field__ = {
                name: component_1.format(field_.name, states),
                value: component_1.format(field_.value, states)
            };
            if (field_.inline !== undefined)
                field__.inline = field_.inline;
            fields__.push(field__);
        }
        fields.push(fields__);
    }
    return fields;
}
module.exports = MessageEmbedComponent;
//# sourceMappingURL=messageEmbed.js.map